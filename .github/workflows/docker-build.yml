name: Build, Push and Deploy (local Rancher)

on:
  workflow_dispatch: # dispara manualmente no Actions

jobs:
  build-deploy:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - uses: docker/setup-buildx-action@v3

      - uses: docker/login-action@v3
        with:
          registry: ${{ secrets.OCI_REGION }}
          username: ${{ secrets.OCI_USER }}
          password: ${{ secrets.OCI_PASS }}

      - name: Build & Push
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ secrets.OCI_REGION }}/${{ secrets.OCI_NAMESPACE }}/poc/image/teste:latest

      - name: Deploy no Rancher Local
        run: |
          IMAGE="${{ secrets.OCI_REGION }}/${{ secrets.OCI_NAMESPACE }}/poc/image/teste:latest"
          PROJECT_ID="1a7"   # seu environment teste-externo
          STACK_NAME="stack-teste"
          SERVICE_NAME="app-poc"

          echo ">> Criando stack se não existir..."
          STACK_ID=$(curl -s -u "${{ secrets.RANCHER_ACCESS_KEY }}:${{ secrets.RANCHER_SECRET_KEY }}" \
            "http://localhost:8080/v2-beta/projects/$PROJECT_ID/stacks?name=$STACK_NAME" \
            | jq -r '.data[0].id')

          if [ "$STACK_ID" = "null" ] || [ -z "$STACK_ID" ]; then
            STACK_ID=$(curl -s -u "${{ secrets.RANCHER_ACCESS_KEY }}:${{ secrets.RANCHER_SECRET_KEY }}" \
              -X POST -H "Content-Type: application/json" \
              -d "{\"name\":\"$STACK_NAME\"}" \
              "http://localhost:8080/v2-beta/projects/$PROJECT_ID/stacks" \
              | jq -r '.id')
            echo "Criada nova stack: $STACK_ID"
          else
            echo "Stack já existe: $STACK_ID"
          fi

          echo ">> Criando ou atualizando service $SERVICE_NAME..."
          SERVICE_ID=$(curl -s -u "${{ secrets.RANCHER_ACCESS_KEY }}:${{ secrets.RANCHER_SECRET_KEY }}" \
            "http://localhost:8080/v2-beta/projects/$PROJECT_ID/services?name=$SERVICE_NAME" \
            | jq -r '.data[0].id')

          if [ "$SERVICE_ID" = "null" ] || [ -z "$SERVICE_ID" ]; then
            echo "Service não existe. Criando..."
            SERVICE_ID=$(curl -s -u "${{ secrets.RANCHER_ACCESS_KEY }}:${{ secrets.RANCHER_SECRET_KEY }}" \
              -X POST -H "Content-Type: application/json" \
              -d "{
                \"name\":\"$SERVICE_NAME\",
                \"stackId\":\"$STACK_ID\",
                \"scale\":1,
                \"launchConfig\":{
                  \"imageUuid\":\"docker:$IMAGE\",
                  \"ports\":[\"9000:9000/tcp\"]
                }
              }" \
              "http://localhost:8080/v2-beta/projects/$PROJECT_ID/services" \
              | jq -r '.id')
            echo "Service criado: $SERVICE_ID"

            echo ">> Ativando service..."
            curl -s -u "${{ secrets.RANCHER_ACCESS_KEY }}:${{ secrets.RANCHER_SECRET_KEY }}" \
              -X POST "http://localhost:8080/v2-beta/projects/$PROJECT_ID/services/$SERVICE_ID/?action=activate"
          else
            echo "Service já existe. Atualizando imagem..."
            curl -s -u "${{ secrets.RANCHER_ACCESS_KEY }}:${{ secrets.RANCHER_SECRET_KEY }}" \
              -X PUT -H "Content-Type: application/json" \
              -d "{
                \"launchConfig\":{
                  \"imageUuid\":\"docker:$IMAGE\",
                  \"ports\":[\"9000:9000/tcp\"]
                }
              }" \
              "http://localhost:8080/v2-beta/projects/$PROJECT_ID/services/$SERVICE_ID"
          fi