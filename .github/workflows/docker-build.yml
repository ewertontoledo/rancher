name: Build and Deploy OCI

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build-deploy:
    runs-on: [self-hosted, macOS, X64]   # forÃ§a rodar no runner local

    steps:
      - uses: actions/checkout@v4

      - uses: docker/setup-buildx-action@v3

      - uses: docker/login-action@v3
        with:
          registry: ${{ secrets.OCI_REGION }}      # ex.: gru.ocir.io
          username: ${{ secrets.OCI_USER }}        # ex.: tenancy/usuario@empresa.com
          password: ${{ secrets.OCI_PASS }}        # Auth Token

      - name: Build & Push Image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            ${{ secrets.OCI_REGION }}/${{ secrets.OCI_NAMESPACE }}/poc/image/teste:latest

      - name: Configurar Kubeconfig
        run: |
          mkdir -p /tmp/kube
          cat > /tmp/kube/config <<EOF
apiVersion: v1
kind: Config
clusters:
- cluster:
    server: ${{ secrets.RANCHER_URL }}/k8s/clusters/local
    insecure-skip-tls-verify: true
  name: local
contexts:
- context:
    cluster: local
    user: rancher-user
    namespace: local
  name: local
current-context: local
users:
- name: rancher-user
  user:
    token: ${{ secrets.RANCHER_TOKEN }}
EOF
          echo "KUBECONFIG=/tmp/kube/config" >> $GITHUB_ENV

      - name: Deploy no Rancher (via kubectl)
        run: |
          set -e
          IMAGE="${{ secrets.OCI_REGION }}/${{ secrets.OCI_NAMESPACE }}/poc/image/teste:latest"

          echo ">> Substituindo imagem no manifest"
          sed -i.bak "s|IMAGE_PLACEHOLDER|$IMAGE|g" .k8s/deployment.yaml

          echo ">> Aplicando manifests..."
          kubectl apply -f .k8s/deployment.yaml
          kubectl apply -f .k8s/service.yaml

          echo ">> Verificando rollout..."
          kubectl -n local rollout status deployment/poc-teste-app --timeout=60s
