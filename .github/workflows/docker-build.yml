name: Build, Push and Deploy to Rancher (externo)

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build-deploy:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - uses: docker/setup-buildx-action@v3

      - uses: docker/login-action@v3
        with:
          registry: ${{ secrets.OCI_REGION }}
          username: ${{ secrets.OCI_USER }}
          password: ${{ secrets.OCI_PASS }}

      - name: Build & Push
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ secrets.OCI_REGION }}/${{ secrets.OCI_NAMESPACE }}/poc/image/teste:latest

      - name: Deploy to Rancher (externo)
        run: |
          IMAGE="${{ secrets.OCI_REGION }}/${{ secrets.OCI_NAMESPACE }}/poc/image/teste:latest"
          NAME="app-poc"

          # Buscar ID do environment externo
          ENVIRONMENTS=$(curl -s -u "${{ secrets.RANCHER_ACCESS_KEY }}:${{ secrets.RANCHER_SECRET_KEY }}" \
            "${{ secrets.RANCHER_URL }}/v2-beta/projects")

          PROJECT_ID=$(echo "$ENVIRONMENTS" | jq -r '.data[] | select(.name=="surf-productin-externo") | .id')

          echo "Usando PROJECT_ID=$PROJECT_ID (externo)"

          # Buscar se container já existe
          CONTAINERS=$(curl -s -u "${{ secrets.RANCHER_ACCESS_KEY }}:${{ secrets.RANCHER_SECRET_KEY }}" \
            "${{ secrets.RANCHER_URL }}/v2-beta/projects/$PROJECT_ID/containers")

          CONTAINER_ID=$(echo "$CONTAINERS" | jq -r ".data[] | select(.name==\"$NAME\") | .id")

          if [ -n "$CONTAINER_ID" ] && [ "$CONTAINER_ID" != "null" ]; then
            echo "Container $NAME já existe. Atualizando imagem..."
            curl -s -u "${{ secrets.RANCHER_ACCESS_KEY }}:${{ secrets.RANCHER_SECRET_KEY }}" \
              -X PUT "${{ secrets.RANCHER_URL }}/v2-beta/projects/$PROJECT_ID/containers/$CONTAINER_ID" \
              -H 'Content-Type: application/json' \
              -d "{
                \"imageUuid\": \"docker:$IMAGE\",
                \"restartPolicy\": {\"name\": \"always\"},
                \"alwaysPullImage\": true
              }"
          else
            echo "Container $NAME não existe. Criando..."
            curl -s -u "${{ secrets.RANCHER_ACCESS_KEY }}:${{ secrets.RANCHER_SECRET_KEY }}" \
              -X POST "${{ secrets.RANCHER_URL }}/v2-beta/projects/$PROJECT_ID/containers" \
              -H 'Content-Type: application/json' \
              -d "{
                \"name\": \"$NAME\",
                \"imageUuid\": \"docker:$IMAGE\",
                \"restartPolicy\": {\"name\": \"always\"},
                \"alwaysPullImage\": true,
                \"publishAllPorts\": false,
                \"ports\": [\"9000:9000/tcp\"]
              }"
          fi
