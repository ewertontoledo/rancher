name: Build and Deploy OCI

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build-deploy:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - uses: docker/setup-buildx-action@v3

      - uses: docker/login-action@v3
        with:
          registry: ${{ secrets.OCI_REGION }}      # ex.: gru.ocir.io
          username: ${{ secrets.OCI_USER }}        # ex.: grj71pgur80e/usuario@empresa.com
          password: ${{ secrets.OCI_PASS }}        # Auth Token

      - name: Build & Push Image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            ${{ secrets.OCI_REGION }}/${{ secrets.OCI_NAMESPACE }}/poc/image/teste:latest

      - name: Deploy no Rancher
        run: |
          set -e
          IMAGE="${{ secrets.OCI_REGION }}/${{ secrets.OCI_NAMESPACE }}/poc/image/teste:latest"
          SERVICE_NAME="teste"   # mesmo nome que está no Rancher
          RANCHER_URL="${{ secrets.RANCHER_URL }}"
          RANCHER_TOKEN="${{ secrets.RANCHER_TOKEN }}"

          echo ">> Fazendo deploy da imagem: $IMAGE no serviço $SERVICE_NAME"
          
          # salva a imagem atual para rollback
          CURRENT_IMAGE=$(curl -s -H "Authorization: Bearer $RANCHER_TOKEN" \
            "$RANCHER_URL/v2-beta/projects/${{ secrets.RANCHER_PROJECT_ID }}/services?name=$SERVICE_NAME" \
            | jq -r '.data[0].launchConfig.imageUuid' | sed 's/docker://')

          echo "Imagem atual: $CURRENT_IMAGE"

          # tenta atualizar a imagem
          if ! curl -s -X PUT -H "Authorization: Bearer $RANCHER_TOKEN" \
            -H 'Content-Type: application/json' \
            --data "{\"launchConfig\": {\"imageUuid\": \"docker:$IMAGE\"}, \"scale\": 1}" \
            "$RANCHER_URL/v2-beta/projects/${{ secrets.RANCHER_PROJECT_ID }}/services/$SERVICE_NAME"; then
            echo "❌ Deploy falhou, restaurando imagem antiga: $CURRENT_IMAGE"
            
            # rollback
            curl -s -X PUT -H "Authorization: Bearer $RANCHER_TOKEN" \
              -H 'Content-Type: application/json' \
              --data "{\"launchConfig\": {\"imageUuid\": \"docker:$CURRENT_IMAGE\"}, \"scale\": 1}" \
              "$RANCHER_URL/v2-beta/projects/${{ secrets.RANCHER_PROJECT_ID }}/services/$SERVICE_NAME"
            exit 1
          fi